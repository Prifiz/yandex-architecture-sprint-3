openapi: 3.0.0
info:
  title: device-manager-service-api
  description: Сервис управления устройствами
  version: 0.1.0

tags:
  - name: user
    description: Операции над пользователями
  - name: house
    description: Операции над домами
  - name: device
    description: Операции над устройствами
  - name: device-type
    description: Операции над типами устройств

paths:
  /user:
    post:
      tags: [ user ]
      description: Создание пользователя
      operationId: createUser
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Созданный пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user/{id}:
    get:
      tags: [ user ]
      description: Получение пользователя по id
      operationId: getUser
      responses:
        '200':
          description: Пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /house:
    post:
      tags: [ house ]
      description: Добавление дома
      operationId: createHouse
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/HouseDto'
      responses:
        '200':
          description: Добавленный дом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseDto'

  /device:
    post:
      tags: [ device ]
      description: Добавление устройства
      operationId: createDevice
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateDeviceDto'
      responses:
        '200':
          description: Добавленное устройство
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
  /device-type:
    post:
      tags: [ device-type ]
      description: Добавление нового типа устройства
      operationId: createDeviceType
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DeviceTypeDto'
      responses:
        '200':
          description: Добавленный тип устройства
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeDto'
  /device/{device_id}:
    get:
      tags: [ device ]
      description: Получение информации об устройстве
      operationId: getDevice
      responses:
        '200':
          description: Данные устройства
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
  /device/{device_id}/command:
    post:
      tags: [ device ]
      description: Отправка команды устройству
      operationId: executeCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommandDto'
  /device/{device_id}/status:
    put:
      tags: [ device ]
      description: Изменение статуса устройства
      operationId: updateStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceStatusDto'

components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name:
          type: string
          example: "Rumpelstilzchen"
    DeviceTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name:
          type: string
          example: "Система отопления"
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/User'
    HouseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 456
        userId:
          type: integer
          format: int64
          example: 123
        address:
          type: string
          example: "Поселок Кривые Костыли, д. 4а, умный сарай 1" # dadata всё стерпит...
    Device:
      type: object
      properties:
        houseId:
          type: integer
          format: int64
          example: 123
        serial:
          type: string
          example: "dfjhd-fgfj-2ereg-dgff"
        name:
          type: string
          example: "Аццкий умный котёл"
        status:
          type: string
          example: "ON"
